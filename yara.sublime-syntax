%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - yar
scope: source.yar

contexts:
  # The prototype context is prepended to all contexts but those setting
  # meta_include_prototype: false.
  prototype:
    - include: comments

  main:
    # The main context is the initial starting point of our syntax.
    # Include other contexts from here (or specify them directly).
    - include: keywords
    - include: numbers
    - include: strings

  keywords:
    # Keywords are if, else for and while.
    # Note that blackslashes don't need to be escaped within single quoted
    # strings in YAML. When using single quoted strings, only single quotes
    # need to be escaped: this is done by using two single quotes next to each
    # other.
    - match: '\b(all|and|any|ascii|at|condition|contains|entrypoint|false|filesize|fullword|for|global|in|import|include|int8|int16|int32|int8be|int16be|int32be|matches|meta|nocase|not|or|of|private|rule|strings|them|true|uint8|uint16|uint32|uint8be|uint16be|uint32be|wide)\b'
      scope: keyword.control.yara

  numbers:
    - match: '\b(-)?[0-9.]+\b'
      scope: constant.numeric.yara

  strings:
    # Strings begin and end with quotes, and use backslashes as an escape
    # character.
    - match: '"'
      scope: punctuation.definition.string.begin.yara
      push: inside_string

  inside_string:
    - meta_include_prototype: false
    - meta_scope: string.quoted.double.yara
    - match: '\\[tnr"]'
      scope: constant.character.escape.yara
    - match: '"'
      scope: punctuation.definition.string.end.yara
      pop: true

  comments:
    - match: ^/\* =(\s*.*?)\s*= \*/$\n?
      scope: comment.block.yara
      captures:
        1: meta.toc-list.banner.block.yara
    - match: /\*
      scope: punctuation.definition.comment.yara
      push:
        - meta_scope: comment.block.yara
        - match: \*/
          scope: punctuation.definition.comment.yara
          pop: true
    - match: \*/(?!\*)
      scope: invalid.illegal.stray-comment-end.yara
    - match: ^// =(\s*.*?)\s*=\s*$\n?
      scope: comment.line.banner.yara
      captures:
        1: meta.toc-list.banner.line.yara
    - match: //
      scope: punctuation.definition.comment.yara
      push:
        - meta_scope: comment.line.double-slash.yara
        - match: '(\\)$\n'
          captures:
            1: punctuation.separator.continuation.yara
        - match: \n
          pop: true
